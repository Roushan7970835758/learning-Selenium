<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="0" failed="0" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-11T01:53:15 IST" name="LambdaTestSuite" finished-at="2025-03-11T01:53:18 IST" duration-ms="2563">
    <groups>
    </groups>
    <test started-at="2025-03-11T01:53:15 IST" name="Edge macOS Ventura" finished-at="2025-03-11T01:53:18 IST" duration-ms="2563">
      <class name="Practice.LambdaTestAutomation">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Practice.LambdaTestAutomation@1b7cc17c]" started-at="2025-03-11T01:53:15 IST" name="setUp" finished-at="2025-03-11T01:53:18 IST" duration-ms="2500" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS Ventura]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Response code 401. Message: Unauthorized, either Username or AccessKey is invalid. 
Host info: host: 'ROUSHAN', ip: '192.168.136.98'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: macOS Ventura}, browserName: MicrosoftEdge, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: macOS Ventura}, browserName: MicrosoftEdge, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 401. Message: Unauthorized, either Username or AccessKey is invalid. 
Host info: host: 'ROUSHAN', ip: '192.168.136.98'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: macOS Ventura}, browserName: MicrosoftEdge, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: macOS Ventura}, browserName: MicrosoftEdge, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:134)
at Practice.LambdaTestAutomation.setUp(LambdaTestAutomation.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLambdaTestScenario()[pri:0, instance:Practice.LambdaTestAutomation@1b7cc17c]" started-at="2025-03-11T01:53:18 IST" name="testLambdaTestScenario" finished-at="2025-03-11T01:53:18 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Response code 401. Message: Unauthorized, either Username or AccessKey is invalid. 
Host info: host: 'ROUSHAN', ip: '192.168.136.98'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: macOS Ventura}, browserName: MicrosoftEdge, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: macOS Ventura}, browserName: MicrosoftEdge, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 401. Message: Unauthorized, either Username or AccessKey is invalid. 
Host info: host: 'ROUSHAN', ip: '192.168.136.98'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: macOS Ventura}, browserName: MicrosoftEdge, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: macOS Ventura}, browserName: MicrosoftEdge, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:134)
at Practice.LambdaTestAutomation.setUp(LambdaTestAutomation.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLambdaTestScenario -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Practice.LambdaTestAutomation@1b7cc17c]" started-at="2025-03-11T01:53:18 IST" name="tearDown" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1741638198423" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Practice.LambdaTestAutomation -->
    </test> <!-- Edge macOS Ventura -->
    <test started-at="2025-03-11T01:53:15 IST" name="Chrome Windows 10" finished-at="2025-03-11T01:53:18 IST" duration-ms="2562">
      <class name="Practice.LambdaTestAutomation">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Practice.LambdaTestAutomation@7b9a4292]" started-at="2025-03-11T01:53:15 IST" name="setUp" finished-at="2025-03-11T01:53:18 IST" duration-ms="2500" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Response code 401. Message: Unauthorized, either Username or AccessKey is invalid. 
Host info: host: 'ROUSHAN', ip: '192.168.136.98'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: Windows 10}, browserName: chrome, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: Windows 10}, browserName: chrome, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 401. Message: Unauthorized, either Username or AccessKey is invalid. 
Host info: host: 'ROUSHAN', ip: '192.168.136.98'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: Windows 10}, browserName: chrome, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: Windows 10}, browserName: chrome, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:134)
at Practice.LambdaTestAutomation.setUp(LambdaTestAutomation.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLambdaTestScenario()[pri:0, instance:Practice.LambdaTestAutomation@7b9a4292]" started-at="2025-03-11T01:53:18 IST" name="testLambdaTestScenario" finished-at="2025-03-11T01:53:18 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Response code 401. Message: Unauthorized, either Username or AccessKey is invalid. 
Host info: host: 'ROUSHAN', ip: '192.168.136.98'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: Windows 10}, browserName: chrome, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: Windows 10}, browserName: chrome, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 401. Message: Unauthorized, either Username or AccessKey is invalid. 
Host info: host: 'ROUSHAN', ip: '192.168.136.98'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: Windows 10}, browserName: chrome, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: Windows 10}, browserName: chrome, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:134)
at Practice.LambdaTestAutomation.setUp(LambdaTestAutomation.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLambdaTestScenario -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Practice.LambdaTestAutomation@7b9a4292]" started-at="2025-03-11T01:53:18 IST" name="tearDown" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1741638198423" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Practice.LambdaTestAutomation -->
    </test> <!-- Chrome Windows 10 -->
  </suite> <!-- LambdaTestSuite -->
</testng-results>
