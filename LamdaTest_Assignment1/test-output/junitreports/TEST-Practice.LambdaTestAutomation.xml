<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Roushan" failures="0" tests="4" name="Practice.LambdaTestAutomation" time="5.000" errors="2" timestamp="2025-03-11T01:53:18 IST" skipped="2">
  <testcase classname="Practice.LambdaTestAutomation" name="setUp" time="2.500">
    <error message="Could not start a new session. Response code 401. Message: Unauthorized, either Username or AccessKey is invalid. 
Host info: host: &#039;ROUSHAN&#039;, ip: &#039;192.168.136.98&#039;
Build info: version: &#039;4.10.0&#039;, revision: &#039;c14d967899&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;21.0.5&#039;
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: Windows 10}, browserName: chrome, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: Windows 10}, browserName: chrome, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 401. Message: Unauthorized, either Username or AccessKey is invalid. 
Host info: host: 'ROUSHAN', ip: '192.168.136.98'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: Windows 10}, browserName: chrome, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: Windows 10}, browserName: chrome, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:134)
at Practice.LambdaTestAutomation.setUp(LambdaTestAutomation.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
    </error>
  </testcase> <!-- setUp -->
  <system-out/>
  <testcase classname="Practice.LambdaTestAutomation" name="testLambdaTestScenario" time="0.000">
    <skipped/>
  </testcase> <!-- testLambdaTestScenario -->
  <system-out/>
  <testcase classname="Practice.LambdaTestAutomation" name="setUp" time="2.500">
    <error message="Could not start a new session. Response code 401. Message: Unauthorized, either Username or AccessKey is invalid. 
Host info: host: &#039;ROUSHAN&#039;, ip: &#039;192.168.136.98&#039;
Build info: version: &#039;4.10.0&#039;, revision: &#039;c14d967899&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;21.0.5&#039;
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: macOS Ventura}, browserName: MicrosoftEdge, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: macOS Ventura}, browserName: MicrosoftEdge, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 401. Message: Unauthorized, either Username or AccessKey is invalid. 
Host info: host: 'ROUSHAN', ip: '192.168.136.98'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: macOS Ventura}, browserName: MicrosoftEdge, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
Capabilities {LT:Options: {build: LambdaTest Build 1, name: LambdaTestAutomation, platformName: macOS Ventura}, browserName: MicrosoftEdge, browserVersion: latest, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:134)
at Practice.LambdaTestAutomation.setUp(LambdaTestAutomation.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
    </error>
  </testcase> <!-- setUp -->
  <system-out/>
  <testcase classname="Practice.LambdaTestAutomation" name="testLambdaTestScenario" time="0.000">
    <skipped/>
  </testcase> <!-- testLambdaTestScenario -->
  <system-out/>
</testsuite> <!-- Practice.LambdaTestAutomation -->
